<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.gokalpkuscu.flowsentinel</groupId>
        <artifactId>flow-sentinel</artifactId>
        <version>1.0.1</version>
    </parent>
    <artifactId>flow-sentinel-core</artifactId>
    <name>flow-sentinel-core</name>
    <description>FlowSentinel Core is the framework-agnostic execution engine for FlowSentinel.
        It provides the essential domain model, flow execution logic, and I/O utilities
        to define, validate, and run multistep flows with strict immutability.
        Designed for maximum portability, it has no Spring or external framework dependencies,
        enabling seamless integration into various platforms.
    </description>
    <properties>
        <junit.jupiter.version>5.10.2</junit.jupiter.version>
        <assertj.version>3.26.0</assertj.version>
        <slf4j.version>2.0.13</slf4j.version>
    </properties>
    <dependencies>
        <!-- Misc -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.20.0-rc1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>